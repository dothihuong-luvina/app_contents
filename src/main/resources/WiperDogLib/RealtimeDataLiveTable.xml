<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDogLib</web>
<name>RealtimeDataLiveTable</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.AllDocs</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1387249773000</creationDate>
<date>1387249773000</date>
<contentUpdateDate>1387249773000</contentUpdateDate>
<version>1.1</version>
<title>RealtimeDataLiveTable</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Import</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<content>{{include document="WiperDogLib.MongoDBConnection"/}}
{{groovy}}
import com.google.gson.*
import org.wiperdog.DrawChartDataLib.DataToDrawChart

def job = request.get("jobName")
def istIid = request.get("IstIid")
if (job != null &amp;&amp; istIid != null) {
    Gson gson = new GsonBuilder().setPrettyPrinting().create()
    def mongoDBConnectionObj = new MongoDBConnection()
    result = mongoDBConnectionObj.cGmongoDBConn.getDataAllFields(job, 50, istIid)
    def retData
    if(result[0] != null){
	def jobType = result[0]['type']
	if (jobType == "Store") {
		retData = []
		for(def i = result.size() - 1; i &gt;= 0; i--){
			def res = result[i]
                        res.data.each {
			    def retObj = [:]
			    retObj = it
			    retObj['Fetch At'] = (new Date().parse("yyyyMMddHHmmssz", res.fetchAt)).format('yyyy/MM/dd HH:mm:ss z')
			    retData.add(retObj)
                        }
		}
		println gson.toJson(retData)
	} else {
		def listKey = []
		retData = [:]
		result[0]['data'].each {
			listKey.add(it.key)
		}
		listKey.each{key-&gt;
			retData[key] = []
		}
		for(def i = result.size() - 1; i &gt;= 0; i--){
			def res = result[i]
			def fetchAtValue = (new Date().parse("yyyyMMddHHmmssz", res.fetchAt)).format('yyyy/MM/dd HH:mm:ss z')
			listKey.each{key-&gt;
				def listData = res['data'][key]
				listData.each{data-&gt;
					data['Fetch At'] = fetchAtValue
					retData[key].add(data)
				}
			}
		}
		println gson.toJson(retData)
	}
    }
    mongoDBConnectionObj.closeConnection()
}
{{/groovy}}</content></xwikidoc>
