<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDog</web>
<name>ProcInstallWDService</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>WiperDog.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1382432327000</creationDate>
<date>1383706709000</date>
<contentUpdateDate>1383706706000</contentUpdateDate>
<version>6.17</version>
<title>ProcInstallWDService</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>deny delete right for XWiki.XWikiAllGroup</comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.ProcInstallWDService</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>0eab9ac6-6d41-46eb-8052-5e8361a61d59</guid>
<property>
<allow>1</allow>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.ProcInstallWDService</name>
<number>1</number>
<className>XWiki.XWikiRights</className>
<guid>44539042-da79-4495-a68a-c8b0c0c19252</guid>
<property>
<allow>0</allow>
</property>
<property>
<levels>edit,delete</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.ProcInstallWDService</name>
<number>2</number>
<className>XWiki.XWikiRights</className>
<guid>c34b347d-87d0-419c-ac10-4e30c0b52416</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAdminGroup</groups>
</property>
<property>
<levels>delete,edit,comment,view</levels>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.ProcInstallWDService</name>
<number>3</number>
<className>XWiki.XWikiRights</className>
<guid>bc1abbbc-97c2-40e3-9300-6cb0f86932ab</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAllGroup</groups>
</property>
<property>
<levels>view,comment</levels>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.ProcInstallWDService</name>
<number>4</number>
<className>XWiki.XWikiRights</className>
<guid>e4264709-9e67-4604-9107-9abee62324fd</guid>
<property>
<allow>0</allow>
</property>
<property>
<groups>XWiki.XWikiAllGroup</groups>
</property>
<property>
<levels>edit,delete</levels>
</property>
</object>
<content>{{groovy}}
import groovy.json.*
//response.setContentType('json');
def data = request.getParameter('data');
def action = request.getParameter('action');
//Closure to run a java process
def runProcClosure(listCmd,dir,waitFor){
	def output = [:]
	ProcessBuilder builder = new ProcessBuilder(listCmd);
	builder.redirectErrorStream(true);
	builder.directory(dir);
	Process p = builder.start();
	if(waitFor){
		output['exitVal'] = p.waitFor()
	}
	InputStream procOut  = p.getInputStream();
	BufferedReader br = new BufferedReader(new InputStreamReader(procOut))
	def line = null
	StringBuffer stdin = new StringBuffer()
	while((line = br.readLine()) != null){
		stdin.append(line + "\n")
	}
	output["message"] = stdin.toString()
	return output
}
//Get program in linux : java,maven ,service ...etc
def whichProgram(program,remoteHost){
	List&lt;String&gt; lstCmdWhich = new ArrayList&lt;String&gt;()
       if(remoteHost != "local") {
	lstCmdWhich.add("ssh")
	lstCmdWhich.add(remoteHost)
	lstCmdWhich.add("source")
	lstCmdWhich.add("~/.bash_profile")
	lstCmdWhich.add(";")
       }
	lstCmdWhich.add("which")
	lstCmdWhich.add(program)
	return runProcClosure(lstCmdWhich,new File("."),true)
}
if(data != null &amp;&amp; data != ""){
def objData = (new JsonSlurper()).parseText(data);

def respMess = [:];
//Location of PsExec.exe
InetAddress hostAddr = null
if(objData.host != 'local'){
    hostAddr = InetAddress.getByName(objData.host);
}

File workDir = new File(System.getProperty("user.dir"));
try {
	if(hostAddr != null &amp;&amp; !hostAddr.isReachable(30000)){
		respMess['status'] = 'false'
		respMess['message'] = 'Can not connect to: ' + objData.host
	} else {
		File wdHomeDir = new File(objData.wdHome)
		def psExec = null
		//Get PsExec location
		if(objData.host != 'local' &amp;&amp; objData.os == 'win'){
			List&lt;String&gt; listCmdPSExec = new LinkedList&lt;String&gt;();
			listCmdPSExec.add("cmd")
			listCmdPSExec.add("/c")
			listCmdPSExec.add("echo")
			listCmdPSExec.add("%PSTOOLS%")
			psExec = runProcClosure(listCmdPSExec,workDir,true).message.trim()+"\\PsExec.exe"
			psExec = psExec.replace("\\\\","\\")
		}
		if(wdHomeDir.isAbsolute()) {

			def fileSavedLoc = null
			def javaPath = null
			def mavenPath = null
			def servicePath = null
			def checkProg = true
			//Check java and maven on remote host
			if(objData.os == 'linux'){
				javaPath = whichProgram("java",objData.host).message.trim()
				mavenPath = whichProgram("mvn",objData.host).message.trim()
				servicePath = whichProgram("service",objData.host).message.trim()
				if(javaPath.contains("no java in")){
					respMess['status'] = 'false'
					respMess['message'] = 'Java not found on: ' + objData.host
					checkProg = false
				}
				if(mavenPath.contains("no mvn in")){
					respMess['status'] = 'false'
					respMess['message'] = 'Maven not found on: ' + objData.host
					checkProg = false
				}
			}
			if(checkProg){
				if(action == 'doDownload' &amp;&amp; objData!= null ) {
					if(objData.os == 'linux'){
						//Process download Wiperdog for Linux
						fileSavedLoc = (objData.wdHome + "//wiperdog-assembly.jar").replace("//","/")

						List&lt;String&gt; listCmd= new LinkedList&lt;String&gt;();
						if(objData.host != "local"){
							listCmd.add("ssh");
							listCmd.add(objData.host);
							listCmd.add(mavenPath)
						} else {
							listCmd.add("mvn")
						}
						listCmd.add("org.apache.maven.plugins:maven-dependency-plugin:2.4:get")
						listCmd.add("-Dartifact=org.wiperdog:wiperdog-assembly:"+objData.version+":jar:win")
						listCmd.add("-Ddest="+ fileSavedLoc)
						listCmd.add("-Dmdep.useBaseVersion=true")

						def output = runProcClosure(listCmd,workDir,false)
						if(output.message.contains("[INFO] BUILD SUCCESS")) {
							respMess["status"] = "success"
							respMess['message'] = "Download wiperdog installer completed."
						} else {
							respMess['status'] = 'failed'
							respMess['message'] = "Failed to download wiperdog installer." + output.message
						}
					} else {
						//Process download Wiperdog for Windows
						List&lt;String&gt; listCmd = new ArrayList&lt;String&gt;()
						// Location to save downloaded file
						fileSavedLoc = (objData.wdHome + "\\wiperdog-assembly.jar").replace("\\\\","\\")
						if(objData.host != "local"){
							listCmd.add(psExec)
							listCmd.add("\\\\" + objData.host)
							listCmd.add("-i")
							listCmd.add("-u")
							def userName = objData.userName.replace("/", "\\")
							listCmd.add('"'+ userName +'"')
							listCmd.add("-p")
							listCmd.add('"'+ objData.password +'"')
							listCmd.add('cmd')
							listCmd.add('/C')
							listCmd.add('mvn')
						}else {
							listCmd.add('cmd')
							listCmd.add('/C')
							listCmd.add('start')
							listCmd.add('cmd.exe')
							listCmd.add('/C')
							listCmd.add("mvn")
						}
						listCmd.add("org.apache.maven.plugins:maven-dependency-plugin:2.4:get")
						listCmd.add("-Dartifact=org.wiperdog:wiperdog-assembly:"+objData.version+":jar:win")
						listCmd.add("-Ddest="+ fileSavedLoc)
						listCmd.add("-Dmdep.useBaseVersion=true")
						def output = runProcClosure(listCmd,workDir,true )
						if(output.exitVal == 0) {
							respMess['status'] = 'success'
							respMess['message'] = "Download wiperdog installer completed."
						} else {
							respMess['status'] = 'failed'
							respMess['message'] = "Failed to download wiperdog installer." + output.message

						}

					}
				}
				if(action == 'doInstall' &amp;&amp; objData!= null ) {

					if(objData.os == 'linux'){
						// -- Install wiperdog service for Linux

						List&lt;String&gt; listCmd = new LinkedList&lt;String&gt;();
						if(objData.host != "local"){
							listCmd.add("ssh");
							listCmd.add(objData.host);
							listCmd.add(javaPath)
						} else {
							listCmd.add("java")
						}
						listCmd.add("-jar")
						def jarPath = (objData.wdHome+"/wiperdog-assembly.jar").replace("//", "/")
						listCmd.add(jarPath)
						listCmd.add("-d")
						listCmd.add(objData.wdHome)
						listCmd.add("-j")
						listCmd.add(objData.jettyPort)
						listCmd.add("-m")
						listCmd.add(objData.mongoHost)
						listCmd.add("-p")
						listCmd.add(objData.mongoPort)
                                                if(objData.mongoUser.trim() != "") {
						  listCmd.add("-u")
						  listCmd.add(objData.mongoUser)
                                                }
                                                if(objData.mongoPass.trim() != "") {
						  listCmd.add("-pw")
						  listCmd.add(objData.mongoPass)
                                                }
						listCmd.add("-n")
						listCmd.add(objData.dbName)
						listCmd.add("-mp")
						listCmd.add(objData.pEmail)
						listCmd.add("-s")
						listCmd.add(objData.sysServ)
						def output = runProcClosure(listCmd, workDir,true)
						if(output.exitVal == 0) {
							respMess["status"] = "success"
						} else {
							respMess["status"] = "failed"
						}
						respMess["message"] = output["message"]
                                                
						// Start service
                                                if(objData.sysServ == "yes") {
						  listCmd = new LinkedList&lt;String&gt;();
						  if(objData.host != 'local'){
							listCmd.add("ssh");
							listCmd.add(objData.host);
							listCmd.add(servicePath)
						  } else {
							listCmd.add("service")
						  }
						  listCmd.add('wiperdog')
						  listCmd.add('start')
                                                }
						output = runProcClosure(listCmd, workDir,true)
						if(output.exitVal == 0) {
							respMess["status"] = "success"
						} else {
							respMess["status"] = "failed"
						}
						respMess["message"] = respMess["message"] + "\n" +output["message"]

					} else {
						// -- Install wiperdog service for Windows
						List&lt;String&gt; listCmd = new LinkedList&lt;String&gt;();
						listCmd = new LinkedList&lt;String&gt;();
						if(objData.host != "local"){
							listCmd.add(psExec)
							listCmd.add("\\\\" + objData.host)
							listCmd.add("-i")
							listCmd.add("-u")
							def userName = objData.userName.replace("/", "\\")
							listCmd.add('"'+ userName +'"')
							listCmd.add("-p")
							listCmd.add('"'+ objData.password +'"')
						} else {
							listCmd.add('cmd')
							listCmd.add('/C')
							listCmd.add('start')
							listCmd.add('cmd.exe')
							listCmd.add('/C')
						}

						listCmd.add("java")
						listCmd.add("-jar")
						def jarPath = (objData.wdHome+"\\wiperdog-assembly.jar").replace("\\\\", "\\").replace("/","\\")
						listCmd.add(jarPath)
						listCmd.add("-d")
						def wdHome = objData.wdHome.replace("/", "\\")
						listCmd.add(wdHome)
						listCmd.add("-p")
						listCmd.add(objData.mongoPort)
						listCmd.add("-j")
						listCmd.add(objData.jettyPort)
						listCmd.add("-m")
						listCmd.add(objData.mongoHost)
                                                if(objData.mongoUser.trim() != "") {
						  listCmd.add("-u")
						  listCmd.add(objData.mongoUser)
                                                }
                                                if(objData.mongoPass.trim() != "") {
						  listCmd.add("-pw")
						  listCmd.add(objData.mongoPass)
                                                }
						listCmd.add("-n")
						listCmd.add(objData.dbName)
						listCmd.add("-mp")
						listCmd.add(objData.pEmail)
						listCmd.add("-s")
						listCmd.add(objData.sysServ)
						def output = runProcClosure(listCmd,workDir,true)
						if(output.exitVal == 0) {
							respMess["status"] = "success"
							def strBuilder = new StringBuilder()
							strBuilder.append("Wiperdog installed at: " + objData.wdHome+ "\n")
							strBuilder.append("Server port: " + objData.jettyPort+ "\n")
							strBuilder.append("Mongo host: " + objData.mongoHost + "\n")
							strBuilder.append("Mongo user: " + objData.mongoUser+ "\n")
							strBuilder.append("Mongo port : " + objData.mongoPort+ "\n")
							strBuilder.append("Email to sent policy message to : " + objData.pEmail+ "\n")
							strBuilder.append("Install wiperdog as system service : " + objData.sysServ+ "\n")

							respMess['message'] = strBuilder.toString() 
						} else {
							respMess["status"] = "failed"
							respMess['message'] = "Failed to install wiperdog at :" + objData.host +"\n"+ output.message
						}

                                               //Start service

                                                if(objData.sysServ == "yes") {
						  listCmd = new LinkedList&lt;String&gt;();
						  if(objData.host != 'local'){
							listCmd.add(psExec)
							listCmd.add("\\\\" + objData.host)
							listCmd.add("-i")
							listCmd.add("-u")
							def userName = objData.userName.replace("/", "\\")
							listCmd.add('"'+ userName +'"')
							listCmd.add("-p")
							listCmd.add('"'+ objData.password +'"')
						  } 
						  listCmd.add('net')
						  listCmd.add('start')
						  listCmd.add('wiperdog')
                                                }
					}
				}
			}
		} else {
			respMess["status"] = "failed"
			respMess['message'] = " Wiperdog Home must be absolute path :" + objData.wdHome
		}
	}
} catch (Exception ex) {
	respMess["status"] = "failed";
	respMess["message"] = ex.toString();
}
def builder = new JsonBuilder(respMess)
println builder.toString()
}
{{/groovy}}</content></xwikidoc>
