<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDog</web>
<name>TestJob</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>WiperDog.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1380879464000</creationDate>
<date>1380853595000</date>
<contentUpdateDate>1380853595000</contentUpdateDate>
<version>1.1</version>
<title>TestJob</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Imported from XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.TestJob</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>b635a28a-b1f7-40c0-b952-45bedb2268d9</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>var persisteduls=new Object()
var ddtreemenu=new Object()

ddtreemenu.closefolder="/xwiki/resources/SimpleTreeMenu/closed.gif" //set image path to "closed" folder image
ddtreemenu.openfolder="/xwiki/resources/SimpleTreeMenu/open.gif" //set image path to "open" folder image

//////////No need to edit beyond here///////////////////////////

ddtreemenu.createTree=function(treeid, enablepersist, persistdays){
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
if (typeof persisteduls[treeid]=="undefined")
persisteduls[treeid]=(enablepersist==true &amp;&amp; ddtreemenu.getCookie(treeid)!="")? ddtreemenu.getCookie(treeid).split(",") : ""
for (var i=0; i&lt;ultags.length; i++)
ddtreemenu.buildSubTree(treeid, ultags[i], i)
if (enablepersist==true){ //if enable persist feature
var durationdays=(typeof persistdays=="undefined")? 1 : parseInt(persistdays)
ddtreemenu.dotask(window, function(){ddtreemenu.rememberstate(treeid, durationdays)}, "unload") //save opened UL indexes on body unload
}
}

ddtreemenu.buildSubTree=function(treeid, ulelement, index){
ulelement.parentNode.className="submenu"
if (typeof persisteduls[treeid]=="object"){ //if cookie exists (persisteduls[treeid] is an array versus "" string)
if (ddtreemenu.searcharray(persisteduls[treeid], index)){
ulelement.setAttribute("rel", "open")
ulelement.style.display="block"
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
else
ulelement.setAttribute("rel", "closed")
} //end cookie persist code
else if (ulelement.getAttribute("rel")==null || ulelement.getAttribute("rel")==false) //if no cookie and UL has NO rel attribute explicted added by user
ulelement.setAttribute("rel", "closed")
else if (ulelement.getAttribute("rel")=="open") //else if no cookie and this UL has an explicit rel value of "open"
ddtreemenu.expandSubTree(treeid, ulelement) //expand this UL plus all parent ULs (so the most inner UL is revealed!)
ulelement.parentNode.onclick=function(e){
var submenu=this.getElementsByTagName("ul")[0]
if (submenu.getAttribute("rel")=="closed"){
submenu.style.display="block"
submenu.setAttribute("rel", "open")
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
else if (submenu.getAttribute("rel")=="open"){
submenu.style.display="none"
submenu.setAttribute("rel", "closed")
ulelement.parentNode.style.backgroundImage="url("+ddtreemenu.closefolder+")"
}
ddtreemenu.preventpropagate(e)
}
ulelement.onclick=function(e){
ddtreemenu.preventpropagate(e)
}
}

ddtreemenu.expandSubTree=function(treeid, ulelement){ //expand a UL element and any of its parent ULs
var rootnode=document.getElementById(treeid)
var currentnode=ulelement
currentnode.style.display="block"
currentnode.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
while (currentnode!=rootnode){
if (currentnode.tagName=="UL"){ //if parent node is a UL, expand it too
currentnode.style.display="block"
currentnode.setAttribute("rel", "open") //indicate it's open
currentnode.parentNode.style.backgroundImage="url("+ddtreemenu.openfolder+")"
}
currentnode=currentnode.parentNode
}
}

ddtreemenu.flatten=function(treeid, action){ //expand or contract all UL elements
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
for (var i=0; i&lt;ultags.length; i++){
ultags[i].style.display=(action=="expand")? "block" : "none"
var relvalue=(action=="expand")? "open" : "closed"
ultags[i].setAttribute("rel", relvalue)
ultags[i].parentNode.style.backgroundImage=(action=="expand")? "url("+ddtreemenu.openfolder+")" : "url("+ddtreemenu.closefolder+")"
}
}

ddtreemenu.rememberstate=function(treeid, durationdays){ //store index of opened ULs relative to other ULs in Tree into cookie
var ultags=document.getElementById(treeid).getElementsByTagName("ul")
var openuls=new Array()
for (var i=0; i&lt;ultags.length; i++){
if (ultags[i].getAttribute("rel")=="open")
openuls[openuls.length]=i //save the index of the opened UL (relative to the entire list of ULs) as an array element
}
if (openuls.length==0) //if there are no opened ULs to save/persist
openuls[0]="none open" //set array value to string to simply indicate all ULs should persist with state being closed
ddtreemenu.setCookie(treeid, openuls.join(","), durationdays) //populate cookie with value treeid=1,2,3 etc (where 1,2... are the indexes of the opened ULs)
}

////A few utility functions below//////////////////////

ddtreemenu.getCookie=function(Name){ //get cookie value
var re=new RegExp(Name+"=[^;]+", "i"); //construct RE to search for target name/value pair
if (document.cookie.match(re)) //if cookie found
return document.cookie.match(re)[0].split("=")[1] //return its value
return ""
}

ddtreemenu.setCookie=function(name, value, days){ //set cookei value
var expireDate = new Date()
//set "expstring" to either future or past date, to set or delete cookie, respectively
var expstring=expireDate.setDate(expireDate.getDate()+parseInt(days))
document.cookie = name+"="+value+"; expires="+expireDate.toGMTString()+"; path=/";
}

ddtreemenu.searcharray=function(thearray, value){ //searches an array for the entered value. If found, delete value from array
var isfound=false
for (var i=0; i&lt;thearray.length; i++){
if (thearray[i]==value){
isfound=true
thearray.shift() //delete this element from array for efficiency sake
break
}
}
return isfound
}

ddtreemenu.preventpropagate=function(e){ //prevent action from bubbling upwards
if (typeof e!="undefined")
e.stopPropagation()
else
event.cancelBubble=true
}

ddtreemenu.dotask=function(target, functionref, tasktype){ //assign a function to execute to an event handler (ie: onunload)
var tasktype=(window.addEventListener)? tasktype : "on"+tasktype
if (target.addEventListener)
target.addEventListener(tasktype, functionref, false)
else if (target.attachEvent)
target.attachEvent(tasktype, functionref)
}







</code></property><property><name>treemenu</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.TestJob</name>
<number>1</number>
<className>XWiki.JavaScriptExtension</className>
<guid>922888d4-4e83-416c-91e0-203e55e09d2f</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>	function getParameterByName(name) {
		name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
		var regex = new RegExp("[\\?&amp;]" + name + "=([^&amp;#]*)"),
			results = regex.exec(location.search);
		return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
	}
	require(['jquery'], function($) {

		$(function() {
			var jobFileName = getParameterByName('jobFileName')
			var param = 'testjob'
			$.ajax({
				type: "GET",
				url: "/xwiki/bin/get/WiperDog/GetServlet?outputSyntax=plain&amp;name=" + param,
				success: function(result) {

					processData(result, jobFileName)

				},
				error: function(xhr, status, error) {}
			});
		});


		function drawMenu(domainURL, result) {
			var ul_open_r = false
			var ul_open_c = false
			var ul_open_j = false

			var strMenu = "&lt;div id='nav'&gt;&lt;a href=\"javascript:ddtreemenu.flatten('treemenu2', 'expand')\"&gt;Expand All&lt;/a&gt; ||&lt;a href=\"javascript:ddtreemenu.flatten('treemenu2', 'contact')\"&gt;Collapse All&lt;/a&gt;"
			for (database in result) {
				if (!ul_open_r) {
					strMenu += "&lt;ul id='treemenu2' class='treeview'&gt;"
					ul_open_r = true
				}
				strMenu += "&lt;li&gt;" + database
				if (!(result[database] instanceof Array)) {
					console.log(result[database])
					for (group in result[database]) {
						if (!ul_open_c) {
							strMenu += "&lt;ul&gt;"
							ul_open_c = true
						}
						strMenu += "&lt;li&gt;" + group
						for (var i = 0; i &lt; result[database][group].length; i++) {
							if (!ul_open_j) {
								strMenu += "&lt;ul&gt;"
								ul_open_j = true
							}
							strMenu += "&lt;li&gt;&lt;a&gt;" + result[database][group][i] + "&lt;/a&gt;&lt;/li&gt;"
						}
						if (ul_open_j) {
							strMenu += "&lt;/ul&gt;"
							strMenu += "&lt;/li&gt;"
							ul_open_j = false
						} else {
							strMenu += "&lt;/li&gt;"
						}
					}
				} else {
					for (var i = 0; i &lt; result[database].length; i++) {
						if (!ul_open_c) {
							strMenu += "&lt;ul&gt;"
							ul_open_c = true
						}
						strMenu += "&lt;li&gt;&lt;a&gt;" + result[database][i] + "&lt;/a&gt;&lt;/li&gt;"
					}
				}
				if (ul_open_c) {
					strMenu += "&lt;/ul&gt;"
					strMenu += "&lt;/li&gt;"
					ul_open_c = false
				} else {
					strMenu += "&lt;/li&gt;"
				}
			}
			if (ul_open_r) {
				strMenu += "&lt;/ul&gt;"
				ul_open_r = false
			}
			console.log(strMenu)
			strMenu += "&lt;/div&gt;"
			$("#menu").html(strMenu)
			ddtreemenu.createTree("treemenu2", true, 5)


		}

		function getJobContent(jobFileName, servlet) {
			$.ajax({
				url: servlet + '?jobFileName=' + jobFileName,
				type: 'GET',
				crossDomain: true,
				dataType: 'json',
				success: function(result) {
					$("#jobContent").val(result.jobContent)
				}
			})
		}

		function save(jobFileName, jobContent, action) {
			var param = 'testjob'
			$.ajax({
				type: "GET",
				url: "/xwiki/bin/get/WiperDog/GetServlet?outputSyntax=plain&amp;name=" + param,
				success: function(result) {
					var dataSend = {
						"jobFileName": jobFileName,
						"data": jobContent,
						"action": action
					}
					$.ajax({
						url: result,
						type: 'POST',
						data: JSON.stringify(dataSend),
						success: function(result) {
							if (result.status == "success") {
								if (action == "save") {
									$('#message_add').text("Save  file success !").addClass('message').removeClass('error')
								} else {
									if (action == "run") {
										$('#message_add').text("Run complete !").addClass('message').removeClass('error')
									}
								}
								if (result.jobData != "") {
									$("#console").val(result.jobData)
								} else {
									if (action == 'run') {
										$('#message_add').text("No data return from job.Check log if error occurring !")
									}
								}
								$("#log").val(result.log)
								$('#loading').hide()
							} else {
								if (result.status == "failed") {
									$('#message_add').text('Failed to run or save file .Reason : ' + result.result).addClass('message').removeClass('error')
								}
							}
						},
						error: function(xhr, status, error) {
							console.log(error)
						}
					})
				},
				error: function(xhr, status, error) {}
			});
		}

		function ajax_get_data(domainURL, jobFileName, callback) {

			$.ajax({
				type: "GET",
				crossDomain: true,
				url: domainURL,
				dataType: 'json',
				success: function(result) {
					$('#viewer').hide()
					drawMenu(domainURL, result)
					if (jobFileName != null &amp;&amp; jobFileName != "") {
						$('#headerMess').hide()
						$('#loading').hide()
						$('#viewer').show()
						$('#jobFileName').val(jobFileName);
						$("#jobContent").prop('readonly', true).addClass('readonly').removeClass('editable')
						getJobContent(jobFileName, domainURL)

					}
					$("#treemenu2 a").click(function() {
						resetControl()
						jobFileName = $(this).text()
						$('#headerMess').hide()
						$('#loading').hide()
						$('#viewer').show()
						$('#jobFileName').val(jobFileName);
						$("#jobContent").prop('readonly', true).addClass('readonly').removeClass('editable')
						getJobContent(jobFileName, domainURL)

					});

					$('#run').click(function(event) {
						resetControl()
						var jobContent = $("#jobContent").val()
						$('#loading').show()
						save(jobFileName, jobContent, "run")

					});
					$('#edit').click(function(event) {
						resetControl()
						var jobContent = $("#jobContent").val()
						$('#jobContent').prop('readonly', false).addClass('editable').removeClass('readonly')
					});
					$('#save').click(function(event) {
						resetControl()
						var jobContent = $("#jobContent").val()
						save(jobFileName, jobContent, "save")

					});;

				},
				error: function(xhr, status, error) {
					$("#message_add").text("Can not get data !.Wiperdog is on yet ?")
				}

			});
		}

		function processData(domainURL, jobFileName) {
			ajax_get_data(domainURL, jobFileName, function(result) {});
		}

		function resetControl() {
			$('#message_add').text("");
			$('#log').val("");
			$('#console').val("");
		}

		jQuery.noConflict();
	});</code>
</property>
<property>
<name>process</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.TestJob</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>db9fe231-06dc-452a-ab31-df2629e88bfa</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>.treeview ul{ /*CSS for Simple Tree Menu*/
margin: 0;
padding: 0;

display:inline-block;
}
.treeview a{
 width:auto;
 display: inline-block
}
#nav a:hover{
 font-weight:bold;
 text-decoration:none;
 cursor:pointer;
 color: #0089DC

}
.treeview li{ /*Style for LI elements in general (excludes an LI that contains sub lists)*/
background: white url("/xwiki/resources/SimpleTreeMenu/list.gif") no-repeat left center;
list-style-type: none;
padding-left: 22px;
margin-bottom: 3px;
font-weight:bold
}

.treeview li.submenu{ /* Style for LI that contains sub lists (other ULs). */
background: white url("/xwiki/resources/SimpleTreeMenu/closed.gif") no-repeat left 1px;
cursor: hand !important;
cursor: pointer !important;
}

.treeview .ui-state-disabled {
background: white url("/xwiki/resources/SimpleTreeMenu/closed.gif") no-repeat left 1px;
color:#DBD9DA
}


.treeview li.submenu ul{ /*Style for ULs that are children of LIs (submenu) */
display: none; /*Hide them by default. Don't delete. */
}

.treeview .submenu ul li{ /*Style for LIs of ULs that are children of LIs (submenu) */
cursor: default;
font-weight:normal
}
#nav{
 float:left;
width:30%;
margin-right:20px;
}
#viewer #displayTable{
  font-weight:bold;
  color:#0089DC;
  float :left;
  width:65%;
}

h6 {
    margin-left: 20px;
    color:black;
    font-family:arial;
    font-size:14px;
}

h5 {
    color:black;
    font-family:arial;
    font-size:16px;
}

#message_add {
    float: right;
    font-size: 1.5em;
    margin-right: 200px
}
#xwikicontent input[type='text'],textarea{
  background: #FFFFD6!important;
 width:100%;
}
#xwikicontent textarea{
  min-height:400px
}
.editable{
  color : #000; 
}
.readonly {
 color: #636B75
}
#viewer .button {
 margin:10px
}
#headerMess{
text-align: center;
font-weight: bold;
font-size: 1.5em
}
#imgLoader{
margin-left:15px
}
#loading{
display: none
}
.message {
color: green
}
.error {
color: red
}</code>
</property>
<property>
<name>css</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.TestJob</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>70b90113-4cda-44a0-b54b-0f1bd3cd9e2b</guid>
<property>
<allow>1</allow>
</property>
<property>
<levels>view,comment,edit,delete</levels>
</property>
<property>
<users>XWiki.Admin</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.TestJob</name>
<number>1</number>
<className>XWiki.XWikiRights</className>
<guid>cacecf5f-0692-45b5-abc3-56d4ba5e734b</guid>
<property>
<allow>1</allow>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.TestJob</name>
<number>2</number>
<className>XWiki.XWikiRights</className>
<guid>8413307b-013d-4330-9a6e-4a2b41923a6c</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAdminGroup</groups>
</property>
<property>
<levels>view,comment,edit,delete</levels>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.TestJob</name>
<number>3</number>
<className>XWiki.XWikiRights</className>
<guid>3211e57f-f676-454e-abc0-8a78dc521641</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAllGroup</groups>
</property>
<property>
<levels>comment,view</levels>
</property>
</object>
<content>{{html wiki="true" clean="false"}}
&lt;div id="menu"&gt;&lt;/div&gt;
&lt;div id="headerMess"&gt; &lt;&lt;&lt;&lt; Select job from right menu to start&lt;/div&gt;
&lt;div id="viewer" style="display:none"&gt;
	&lt;table id = 'displayTable' border = 1&gt;
		&lt;tr&gt;&lt;th&gt;Job File Name&lt;/th&gt;&lt;td  &gt;&lt;input type="text" name="jobName" id="jobFileName" readonly /&gt;&lt;/td&gt;&lt;/tr&gt;
		&lt;tr&gt;&lt;th colspan="2"&gt;Job Content&lt;/th&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td colspan="2"&gt;&lt;textarea type="text" name="jobContent" id = "jobContent" &gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td colspan="2"&gt;&lt;div id="message"&gt;&lt;span id="message_add"&gt;&lt;span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
		&lt;tr&gt;&lt;td colspan="2" style="text-align:center "&gt;&lt;input type="button" style = "width:100px;"name="edit" id = "edit" class = "button" value="Edit"&gt;&lt;input type="button" style = "width:100px;"name="run" id = "run" class = "button" value="Run"&gt;&lt;input type="button" style = "width:100px;"name="save" id = "save" class = "button" value="Save"&gt;&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td&gt;Result &lt;span id="loading"&gt;loading ,please wait...&lt;img src="/xwiki/resources/images/ajax-loader.gif" id='imgLoader'/&gt;&lt;/span&gt;&lt;/td&gt;&lt;td&gt;Log&lt;/td&gt;&lt;/tr&gt;
		&lt;tr&gt;&lt;td&gt;&lt;textarea name="console" id = "console" readonly &gt;&lt;/textarea&gt;&lt;/td&gt;&lt;td  rowspan="" headers=""&gt;&lt;textarea name="log" id = "log" readonly &gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;
	&lt;/table&gt;
&lt;/div&gt;
{{/html}}</content></xwikidoc>
