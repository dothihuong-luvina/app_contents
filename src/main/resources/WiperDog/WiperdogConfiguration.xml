<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDog</web>
<name>WiperdogConfiguration</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>WiperDog.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1381313810000</creationDate>
<date>1382325533000</date>
<contentUpdateDate>1382325530000</contentUpdateDate>
<version>1.51</version>
<title>WiperdogConfiguration</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>allow view right for XWiki.XWikiAllGroup</comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>563a5377-8f15-4185-b704-cd9d1efab1e9</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>require(['jquery'],function($){

  var flagPass = true
  var flagShow = true
  //Use jquery.showPassword.min.js for hide/show password
  // Add button to show password in input field
  $.fn.showPassword = function(options) {
    var opts = $.extend({}, $.fn.showPassword.defaults, options);

    return this.each(function() {
      var $this = $(this),
          elPosition = $this.position(),
          elWidth = $this.outerWidth(),
          elHeight = $this.outerHeight(),
          $parent = $this.parent(),
          parentHeight = $parent.height();

      // Support for the Metadata Plugin.
      var o = $.meta ? $.extend({}, opts, $this.data()) : opts;
      $parent.height(parentHeight);
    
      //Create the link
      $('&lt;a/&gt;', {
        href: '#',
        'class': o.linkClass,
        click: function(e) {
          $(".password-showing").prop('disabled',true)
          var $showPassInput = $parent.find('.'+o.showPasswordInputClass);
          if(!flagPass){
             $(".password-showing").prop('disabled',false)
             if($this.css('display') === 'none') { //If the regular input is hidden
               $this.val($showPassInput.val()).show();
               $showPassInput.hide();
               flagShow = true
             } else { //If the showing password input is hidden
               $showPassInput.val($this.val()).show();
               $this.hide();
               flagShow = false
             }
          }
          e.preventDefault();
        },
        css: {
          left: elPosition.left + elWidth,
          top: elPosition.top + elHeight
        },
        text: o.linkText
      }).appendTo($parent);
      
      var $toggleAnchor = $parent.find('.'+o.linkClass),
          toggleAnchorWidth = $toggleAnchor.outerWidth(),
          toggleAnchorLeft = parseInt($toggleAnchor.css('left'), 10),
          toggleAnchorHeight = $toggleAnchor.outerHeight(),
          toggleAnchorTop = parseInt($toggleAnchor.css('top'), 10);
          
      $toggleAnchor.css({
        'left': (toggleAnchorLeft - toggleAnchorWidth - o.linkRightOffset),
        'top': (toggleAnchorTop - toggleAnchorHeight - o.linkTopOffset)
      });
      
      //Create the input to switch
      $('&lt;input/&gt;', {
        'class': o.showPasswordInputClass,
        css: {
          display: 'none',
          left: elPosition.left,
          top: elPosition.top
        },
        type: 'text'
      }).appendTo($parent);
      
    });
  };
  // default options
  $.fn.showPassword.defaults = {
    linkClass: 'show-password-link',
    linkText: 'Show',
    showPasswordInputClass: 'password-showing',
    linkRightOffset: 0,
    linkTopOffset: 0
  };

  function deleteRow(r){
    var i=r.parentNode.parentNode.rowIndex;
    var row = r.parentNode.parentNode
    document.getElementById('table_display').deleteRow(i);
    return row
  }

  function editRow(r){
    var row = r.parentNode.parentNode
    var key_edit= row.cells[0].innerText
    $("#name").val(key_edit)
    $("#host").val(row.cells[1].innerText)
    $("#port").val(row.cells[2].innerText)
    $("#servlet").val(row.cells[3].innerText)
    $("#desc").val(row.cells[4].innerText)
  }

  function sendDataMongo(resultMongo){
     var data2send = JSON.stringify(resultMongo)
     $("#resultMongo").val(data2send)
  }

  function sendData(result){
     var data2send = JSON.stringify(result)
     $("#result").val(data2send)
  }
  var td_desc_width = ($("#desc").parent().width())
  $("#desc").width(td_desc_width)
  var name = null
  var hostName = null
  var port = null
  var servlet = null
  var desc = null
  if($("#result").text() != null){
     var result = $.parseJSON($("#result").text())
  }
  if($("#resultMongo").text() != null){
     var resultMongo = $.parseJSON($("#resultMongo").text())
  }

  var hostMongo = null
  var portMongo = null
  var userMongo = null
  var passMongo = null
  var dbNameMongo = null

  if(result == null || (result instanceof Array)){
    result = {}
  }
  if(resultMongo == null || (resultMongo instanceof Array)){
    resultMongo = {}
  }
  $("#name").focus()
  $("#update").click(function(){
    hostMongo = $("#hostMongo").val()
       //check validate host
       if(hostMongo === ""){
          $("#messageMongo").text("Host name of MongoDB can not be empty!")
          return false
       } else {
          $("#messageMongo").text("")
       }
    portMongo = $("#portMongo").val()
       //check validate port
       if(portMongo === ""){
          $("#messageMongo").text("Port of MongoDB can not be empty!")
          return false
       } else { 
          if(!($.isNumeric(portMongo))){
              $("#messageMongo").text("Port of MongoDB must be numeric!")
              return false
          }else{
              $("#messageMongo").text("")
          }
       }
    userMongo = $("#userMongo").val()
    var passValidate = /^[a-zA-Z0-9]+$/; 
       if(flagShow) {
          passMongo = $("#password").val()
       } else {
          passMongo = $(".password-showing").val()
       }   
       //check validate username and password
       if(userMongo === "" &amp;&amp; passMongo != ""){
          $("#messageMongo").text("UserName connect to MongoDB can not be empty when have Password!")
          return false
       } else {
              $("#messageMongo").text("")
       }
       //check validate password
       if(!passValidate.test(passMongo) &amp;&amp; passMongo != ""){
          $("#messageMongo").text("Password only include alphanumeric!")
          return false
       } else {
          $("#messageMongo").text("")
       }
       //check password can't be empty
       if(userMongo != "" &amp;&amp; passMongo === ""){
          $("#messageMongo").text("Password can't be empty!")
          return false
       } else {
          $("#messageMongo").text("")
       }
    dbNameMongo = $("#dbNameMongo").val()
       //check validate database name
       if(dbNameMongo === ""){
          $("#messageMongo").text("Database Name of MongoDB can not be empty!")
          return false
       } else {
              $("#messageMongo").text("")
       }
    var confirm_update = confirm("Update Information of MongoDB. Are you sure?")
    if(confirm_update){
      $("#hostMongo").val(hostMongo)
      $("#portMongo").val(portMongo)
      $("#userMongo").val(userMongo)
      $("#password").val(passMongo)
      $("#dbNameMongo").val(dbNameMongo)
      $("#messageMongo").text('Update succefully!')
      $("#hostMongo").prop('disabled',true)
      $("#portMongo").prop('disabled',true)
      $("#userMongo").prop('disabled',true)
      $("#password").prop('disabled',true)
      $("#dbNameMongo").prop('disabled',true)
    } else {
      return false
    }
    resultMongo = {}
    resultMongo['host'] = hostMongo
    resultMongo['port'] = portMongo
    resultMongo['user'] = userMongo
    resultMongo['pass'] = passMongo
    resultMongo['dbName'] = dbNameMongo
    sendDataMongo(resultMongo)
  })

  $(document).ready(function() {
	$('#password').showPassword();
  })
  $("#add").click(function(){
     name = $("#name").val()
     if(name === ""){
        $("#message").text("Name can not be empty !")
          return
     } else {
            $("#message").text("")
     }

     hostName = $("#host").val()
     if(hostName === ""){
        $("#message").text("Host name can not be empty !")
          return
     } else {
        $("#message").text("")
     }
     port = $("#port").val()
     var intRegex = /^\d+$/;
     if(port === ""){
        $("#message").text("Port can not be empty !")
        return
     } else {
        if(!intRegex.test(port)){
            $("#message").text("Port must be numeric !")
             return
        }else{
            $("#message").text("")
        }
     }
     servlet= $("#servlet").val()
     if(servlet === ""){
        $("#message").text("Servlet can not be empty !")
         return
     } else {
        if(servlet.indexOf("/") === 0 || servlet.charAt(servlet.length - 1) == '/') {
           $("#message").text("Servlet can not start or end with '/' character  !")
            return
        } else {
          $("#message").text("")
        }
     }
    desc = $("#desc").val()
     if(desc === null){
       desc = ""

     }
     var key = name
     var value_servlet = "http://" + hostName + ":" + port + "/" + servlet
     var update = false
     for(key_res in result ){
       if(key === key_res){
       update = true
       break
     }
   }
  if(update){
     var confirm_update = confirm("Name exists ,want to update ?")
     if(confirm_update){
       var rows = document.getElementById('table_display').rows
       for(var i = 0 ; i &lt; rows.length ; i++) {
         var key2remove = rows[i].cells[0].innerText
         if(key == key2remove ){
          rows[i].cells[1].innerText = $("#host").val()
          rows[i].cells[2].innerText = $("#port").val()
          rows[i].cells[3].innerText = $("#servlet").val()
                                        rows[i].cells[4].innerText = $("#desc").val()
          $("#message").text('Update succefully !')
          $("#name").prop('disabled',false)
          $("#name").val("")
          $("#host").val("")
          $("#port").val("")
          $("#servlet").val("")
          $("#desc").val("")
         }
       }
    }
  } else {
    var tr2 = document.createElement('tr')
    var td_name2 = document.createElement('td')
    var inp_name2 = document.createTextNode(name)
    td_name2.appendChild(inp_name2)
    var td_host2 = document.createElement('td')
    var inp_host2 = document.createTextNode(hostName)
    td_host2.appendChild(inp_host2)
    var td_port2 = document.createElement('td')
    var inp_port2 = document.createTextNode(port)
    td_port2.appendChild(inp_port2)
    var td_servlet2 = document.createElement('td')
    var inp_servlet2 = document.createTextNode(servlet)
    var td_desc = document.createElement('td')
    var inp_desc = document.createTextNode(desc)
               
    var btn_delete = document.createElement('input')
     btn_delete.setAttribute('type','button')
     btn_delete.setAttribute('style','width:50px')
     btn_delete.setAttribute('value','Delete')
     btn_delete.setAttribute('class','delete button')
    var btn_edit = document.createElement('input')
     btn_edit.setAttribute('type','button')
     btn_edit.setAttribute('class','edit button')
     btn_edit.setAttribute('value','Edit')
     btn_edit.setAttribute('style','width:50px')
    var td_action = document.createElement('td')
      td_action.appendChild(btn_delete)
      td_action.appendChild(btn_edit)
      td_servlet2.appendChild(inp_servlet2)
                  td_desc.appendChild(inp_desc)
    tr2.appendChild(td_name2)
    tr2.appendChild(td_host2)
    tr2.appendChild(td_port2)
    tr2.appendChild(td_servlet2)
                tr2.appendChild(td_desc)
    tr2.appendChild(td_action)
               $(tr2).insertBefore($("#input"))
    $("#name").val("")
    $("#host").val("")
    $("#port").val("")
    $("#servlet").val("")
    $("#desc").val("")

     }
     result[key] = {}
     result[key]['servlet'] = value_servlet
     result[key]['desc'] = desc
     sendData(result)

  });
   $(document).on('click','.delete',function(){
    var conf_del = confirm("Are you sure ?")
    if(conf_del){
      var row = deleteRow(this)
      var key_remove = row.cells[0].innerText
			delete result[key_remove]
      sendData(result)
      if($("#name").text() === key_remove) {
         $("#name").prop('disabled',false)
      }

    }
  })
  $(document).on('click','.edit',function(){
      editRow(this)
      $("#name").prop('disabled',true)
  })

  $(document).on('click','.editMongo',function(){
      $("#hostMongo").prop('disabled',false)
      $("#portMongo").prop('disabled',false)
      $("#userMongo").prop('disabled',false)
      $("#password").prop('disabled',false)
      $(".password-showing").prop('disabled',false)
      $(".show-password-link").prop('disabled',false)
      $("#dbNameMongo").prop('disabled',false)
      flagPass = false
  })

jQuery.noConflict()
});</code>
</property>
<property>
<name>process</name>
</property>
<property>
<parse></parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>3047e03e-809e-498f-953a-a1bad217aa91</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>#form{
float:left
}
.message{
 margin-left:200px;
 font-weight:bold;
 color:green;
display: block
}

.header{
display:block ;
font-weight: bold ;
font-size: 1.5em
}
label{
 font-size: 1.2em;
 font-weight: bold
}
#dir{
 width: 500px
}</code>
</property>
<property>
<name>css</name>
</property>
<property>
<parse></parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>b56f91a2-46f7-47ff-804a-3d1bd9ed1b62</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels>view,edit,delete,comment</levels>
</property>
<property>
<users>xwiki:XWiki.Admin</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>1</number>
<className>XWiki.XWikiRights</className>
<guid>c292f124-7685-4307-8511-42587ef0a335</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>2</number>
<className>XWiki.XWikiRights</className>
<guid>aaedc8b8-16b9-40c1-9c2c-b895021c3b24</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAdminGroup,</groups>
</property>
<property>
<levels>view,edit,delete,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>3</number>
<className>XWiki.XWikiRights</className>
<guid>11720ed0-6f1d-48e9-ab56-882bcfeaa0b6</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAllGroup,</groups>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>4</number>
<className>XWiki.XWikiRights</className>
<guid>6faa9b9c-0055-4aaa-ac27-ba5b83c89344</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAdminGroup,</groups>
</property>
<property>
<levels>view,edit,delete,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>6</number>
<className>XWiki.XWikiRights</className>
<guid>2abb04c4-65a6-4351-af7f-4bda013c323b</guid>
<property>
<allow>0</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAllGroup,</groups>
</property>
<property>
<levels>edit,delete</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>7</number>
<className>XWiki.XWikiRights</className>
<guid>ccf26104-c297-4e13-b1b8-2bdb80c54288</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAllGroup,</groups>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>8</number>
<className>XWiki.XWikiRights</className>
<guid>ea57d28f-b5ec-4daa-99ec-4252a1aac10f</guid>
<property>
<allow>0</allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels>edit,delete</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>9</number>
<className>XWiki.XWikiRights</className>
<guid>f1c14ad6-50e5-42a3-97c1-e306c946adcc</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAdminGroup</groups>
</property>
<property>
<levels>view,comment,edit,delete</levels>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>11</number>
<className>XWiki.XWikiRights</className>
<guid>3d82cc02-cd73-499b-8ebc-baa2c8284196</guid>
<property>
<allow>0</allow>
</property>
<property>
<groups>XWiki.XWikiAllGroup</groups>
</property>
<property>
<levels>delete,edit</levels>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>12</number>
<className>XWiki.XWikiRights</className>
<guid>75d45768-b675-4d22-a508-00f96c69f8ce</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>XWiki.XWikiAllGroup</groups>
</property>
<property>
<levels>comment,view</levels>
</property>
</object>
<content>{{include document='WiperDog.GetConstantConfig'/}}

{{groovy}}
import groovy.json.*
import java.util.regex.Pattern
def shell = new GroovyShell()
Properties props = System.getProperties();
def xwiki_dir = props.getProperty('user.dir');

def servletData= request.getParameter('result')
def dataMongo = request.getParameter('resultMongo')
def wdHome = request.getParameter('wdDir')

File f = new File(xwiki_dir +"/webapps/xwiki/resources/conf.params")
def defaultParams= GetConstantConfig.DEFAULT_CONFIG
if(!f.exists()){
	println "{{warning}}File conf.params not found ,new file created !.Create data to update to conf.params file {{/warning}}"
	f.createNewFile()
}
def slurper = new JsonSlurper()
def messServlet = null
def messageMongo = null
def messWDPath = null
String errMess= ""
String inMess = ""
if(servletData!= null){
	try{
		servletDataObj = slurper.parseText(servletData)
		def oldData = shell.evaluate(f)
		if(oldData == null){
			oldData = [:]
		}
		if(oldData['servlet_config'] == null){
			oldData['servlet_config'] = [:]
		}
		oldData['servlet_config'] = servletDataObj
		def oldDataBuilder = new JsonBuilder(oldData)
		f.setText(oldDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
		messServlet = "Create servlet infomartion succesfully !"
	}catch(Exception ex){
		messServlet = "{{error}}Failed to create servlet informartion!" + ex +"{{/error}}"
	}
}

if(dataMongo != null){
	try{
		dataMongoObj = slurper.parseText(dataMongo)
		def oldData = shell.evaluate(f)
		if(oldData == null){
			oldData = [:]
		}
		if(oldData['mongoDB'] == null){
			oldData['mongoDB'] = [:]
		}
		oldData['mongoDB'] = dataMongoObj
                oldData['mongoDB']['port'] = Long.valueOf(oldData['mongoDB']['port'])
		def oldDataBuilder = new JsonBuilder(oldData)
		f.setText(oldDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
		messageMongo = "Create mongoDB infomartion succesfully! MongoDB connection information to be applied when wiperdog be restarted!"
	}catch(Exception ex){
		messageMongo = "{{error}}Failed to create mongoDB informartion!" + ex +"{{/error}}"
	}
}
if(wdHome != null){
	File wpPath = new File(wdHome)
	if(!wpPath.isDirectory() ){
		messWDPath = "{{error}}Incorrect directory: ' " + wdHome +  " ' , please try again !  {{/error}}"
	} else {
		try{
			def confData = shell.evaluate(f)
			if(confData == null){
				confData = [:]
			}
			if(confData['wiperdog_path'] == null){
				confData['wiperdog_path'] = [:]
			}
			confData['wiperdog_path'] = wdHome
			def osName = System.getProperty('os.name')
			def encoding = "SJIS"
			def proc = null
			if(osName != null &amp;&amp; osName.toLowerCase().indexOf('win') ==-1){
                                // Linux process
				configFile = new File(wdHome + "/bin/wiperdog")
				if(!configFile.exists()){
					errMess = "Directory: " + wdHome + " not be a wiperdog home directory !"
				} else {
					fileText = configFile.text
					def newHome = wdHome.replaceAll(/\\+/, '/')
					newFileText = ""
					macherPattern = "(WIPERDOGHOME=)((?:(?!\\n).)*)"
					pattern = Pattern.compile(macherPattern, Pattern.DOTALL);
					matcher = pattern.matcher(fileText);
					while(matcher.find()) {
						newFileText = fileText.replace(matcher.group(1) + matcher.group(2), matcher.group(1) + newHome)
					}
					def crlfFixFileText = newFileText.replaceAll("\r","");
					configFile.write(crlfFixFileText)
					/** Replace CRLF to LF to fit Unix file format **/

					/* Install service script */
					FileOutputStream fos = new FileOutputStream(new File("install_service.sh"))
					StringBuffer sBuff = new StringBuffer(512)
					sBuff.append("#!/bin/sh\n#\n#\n#\n")
					def procCheckStatus = "/sbin/service wiperdog status".execute()
					if(!procCheckStatus.in.text.contains('stopped...')){
						sBuff.append("/sbin/service wiperdog stop\n")
					}
					sBuff.append("/bin/cp "+wdHome+"/bin/wiperdog /etc/rc.d/init.d/\n")
					sBuff.append("/bin/chmod 755 /etc/rc.d/init.d/wiperdog\n")
					sBuff.append("/sbin/chkconfig --del wiperdog\n")
					sBuff.append("/sbin/chkconfig --add wiperdog\n")
					sBuff.append("/sbin/chkconfig --level 2 wiperdog on\n")
					sBuff.append("/sbin/chkconfig --level 3 wiperdog on\n")
					sBuff.append("/sbin/chkconfig --level 4 wiperdog on\n")
					sBuff.append("/sbin/chkconfig --level 5 wiperdog on\n")
					sBuff.append("/sbin/chkconfig --list wiperdog\n")
					sBuff.append("/bin/chmod 755 "+ wdHome +"/bin/* \n")
				        sBuff.append("/sbin/service wiperdog start\n")
					fos.write(sBuff.toString().getBytes());
					fos.flush();
					fos.close();
					proc = "/bin/chmod 755 install_service.sh".execute()
					proc = "/bin/sh install_service.sh".execute()
                                        inMess = proc.in.text
					errMess = proc.err.text	
					proc.waitFor()

				}
				if(errMess == ""){
					def confDataBuilder = new JsonBuilder(confData)
					f.setText(confDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
					messWDPath = "Update wiperdog path succesfully !"
                                        errMess  = inMess 
				} else {
					messWDPath = "{{error}}Failed to Update wiperdog path !" + errMess + "{{/error}}"
				}
			} else {
                           def controlService = new ControlService()
                           controlService.stopServiceWindows()
                           errMess = controlService.reInstallServiceWindows(wdHome)
                           // If re-install OK ,update wiperdog_path config to file conf.params
                           errMess += controlService.startServiceWindows()
                           if(errMess.contains("The service was successfully installed.")){
                             def confDataBuilder = new JsonBuilder(confData)
                             f.setText(confDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
                             messWDPath = "Update wiperdog path succesfully"
                             }else {
                             messWDPath = "{{error}}Failed to Update wiperdog path ! Reason: " + errMess + "{{/error}}"
                           }
                         

                	}
		}catch(Exception ex){
			messWDPath = "{{error}}Failed to Update wiperdog path !" + ex + "{{/error}}"
		}
	}

}
def params = shell.evaluate(f)
if(params == null || params == []) {
	params = defaultParams
}

def paramsServlet = params['servlet_config']
def mongoDBInfo = params['mongoDB']
def paramsWDPath = params['wiperdog_path']

if(paramsServlet == null || paramsServlet == [:] ){
	paramsServlet = defaultParams['servlet_config']
} else {
	def paramsKeys = paramsServlet.keySet()
	defaultParams['servlet_config'].each{ key,value -&gt;
		if(!paramsKeys.contains(key)){
			paramsServlet[key] = {}
			paramsServlet[key]['servlet'] = value.servlet
			paramsServlet[key]['desc'] = value.desc
		}
	}
}

if(mongoDBInfo == null || mongoDBInfo == [:] ){
	mongoDBInfo = defaultParams['mongoDB']
}

if(paramsWDPath == null || paramsWDPath == "" ){
	paramsWDPath = defaultParams['wiperdog_path']
}

params['mongoDB'] = mongoDBInfo 
params['servlet_config'] = paramsServlet
def builder = new JsonBuilder(params['servlet_config'])
def str_json = builder.toPrettyString()

def builderMongo = new JsonBuilder(params['mongoDB'])
def strJsonMongo = builderMongo.toPrettyString()

def tmp = [:]
println "{{html clean='false' wiki = 'true'}}"
println "&lt;form action='#' method='POST'&gt;"
println "&lt;div class= 'header'&gt;Servlet Configuration&lt;/div&gt;"
println "&lt;table id='table_display'&gt;"
println "&lt;tr style='text-align:center'&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Host name&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;th&gt;Servlet path&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;/tr&gt;"
	paramsServlet.each{key,value -&gt;
	def arr_str = ""
	def hostname = ""
	def port = ""
	def servletPath = ""
	def description = ""
	if(value.servlet != null &amp;&amp;  value.servlet != []){
		arr_str = value.servlet.split(":")
		hostname = arr_str[1].replace("//","")
		port = arr_str[2].substring(0,arr_str[2].indexOf("/"))
		servletPath = arr_str[2].substring(arr_str[2].indexOf("/")+1)
	}
	if(value.desc != null &amp;&amp; value.desc != []){
		description = value.desc
	} else {
		description = "No description"
	}
	println "&lt;tr&gt;&lt;td&gt;$key&lt;/td&gt;&lt;td&gt;$hostname&lt;/td&gt;&lt;td&gt;$port&lt;/td&gt;&lt;td&gt;$servletPath&lt;/td&gt;&lt;td&gt;$description&lt;/td&gt;&lt;td style='width:120px,text-align:center'&gt;&lt;input type='button' style='width:50px' value='Delete' class='delete button'/&gt;&lt;input type='button' value='Edit' style='width:50px' class='edit button'/&gt;&lt;/td&gt;&lt;/tr&gt;" 
	}
println "&lt;tr id='input'&gt;&lt;td&gt;&lt;input type='text' id = 'name' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'host' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'port' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'servlet' /&gt;&lt;/td&gt;&lt;td&gt;&lt;textarea type='text' width='auto' id='desc'/&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;/table&gt;"
println "{{html wiki = 'false' clean = 'true'}}"
println "&lt;textarea id='result' name = 'result' style='display: none' readonly&gt;$str_json&lt;/textarea&gt;"
println "&lt;input type='button' id='add' style='width:50px' class='button' value='Add'/&gt;"
println "&lt;input type='submit' id='create' style='width:50px' class='button' value='Create'/&gt;"
println "{{/html}}"
println "&lt;/form&gt;"
println "&lt;br/&gt;"
println "&lt;div class='message' id='message'&gt;"
	if(messServlet!=null){
		println messServlet
	}
println "&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"

println "&lt;form action='#' method='POST'&gt;"
println "&lt;div class='header'&gt;MongoDB Configuration&lt;/div&gt;"
println "&lt;table id='mongoDBInfo'&gt;"
println "&lt;tr&gt;&lt;td&gt;Host Name:&lt;/td&gt;"
     def hostname = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          hostname = mongoDBInfo.host
          if(hostname == null){
	  	hostname = ""
	  }
     }
println "&lt;td&gt;&lt;input type='text' id ='hostMongo' value='$hostname' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;Port:&lt;/td&gt;"
     def port = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          port = mongoDBInfo.port
          if(port == null){
	  	port = ""
	  }
     }
println "&lt;td&gt;&lt;input type='text' id ='portMongo' value='$port' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;UserName:&lt;/td&gt;"
     def userName = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          userName = mongoDBInfo.user
          if(userName == null){	
	  	userName = ""
	  }
     }
println "&lt;td&gt;&lt;input type='text' id ='userMongo' value='$userName' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;Password:&lt;/td&gt;"
     def pass = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          pass = mongoDBInfo.pass
          if(pass == null){
	  	pass = ""
	  }
     }
println "&lt;td&gt;&lt;input type='password' id ='password' class='password' value='$pass' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;Database Name:&lt;/td&gt;"
     def dbName = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          dbName = mongoDBInfo.dbName
          if(dbName == null){
	  	dbName = ""
	  }
     }
println "&lt;td&gt;&lt;input type='text' id ='dbNameMongo' value='$dbName' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"

println "&lt;/table&gt;"
println "{{html wiki = 'false' clean = 'true'}}"
println "&lt;textarea id='resultMongo' name='resultMongo' style='display:none' readonly&gt;$strJsonMongo&lt;/textarea&gt;"
println "&lt;input type='button' value='Edit' style='width:50px' class='editMongo button'/&gt;" 
println "&lt;input type='submit' id='update' style='width:120px' class='updateMongo button' value='Update MongoDB'/&gt;"
println "{{/html}}"
println "&lt;/form&gt;"
println "&lt;div class='message' id='messageMongo'&gt;"
	if(messageMongo != null){
		println messageMongo
	}
println "&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"

println "&lt;form id = 'wiperdogPath' action = '' method = 'POST'&gt;"
println "&lt;div class= 'header'&gt;WiperDog Path Configuration&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;label for = 'dir'&gt;Current Wiperdog path :&lt;/label&gt;"
	if(paramsWDPath != null &amp;&amp; paramsWDPath  != ""){
		println "&lt;input type ='text' id = 'dir' name = 'wdDir' value='" + paramsWDPath + "' /&gt;"
	} else {
		println "&lt;input type ='text' id = 'dir' name = 'wdDir' /&gt;"
	}
println "&lt;input type = 'submit' id = 'updateWDPath' class='button' value = 'UPDATE'/&gt;"
println "&lt;/form&gt;"
println "&lt;br/&gt;"
println "&lt;div class='message'&gt;"
	if(messWDPath!=null){
		println "&lt;pre&gt;" + messWDPath + "&lt;/pre&gt;"
                if(errMess != ""){
                println "&lt;p&gt;Log: &lt;p&gt;"
                println "&lt;textarea id='log' readonly = 'true' style='width: 500px;height: 300px;overflow: scroll' &gt;$errMess&lt;/textarea&gt;"
                }
	}
println "&lt;/div&gt;"

println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;br/&gt;"
println "{{/html}}"
//Control stop and reinstall wiperdog service
class ControlService{
    public void stopServiceWindows() throws Exception{
    	
    	File workDir = new File(System.getProperty("user.dir"));
    	List&lt;String&gt; listCmd = new LinkedList&lt;String&gt;();
    	listCmd.add("net");
    	listCmd.add("stop");
    	listCmd.add("wiperdog");
    	ProcessBuilder builder = new ProcessBuilder(listCmd);
		builder.redirectErrorStream(true);
		Process p = builder.start();	
		InputStream procOut  = p.getInputStream();
        OutputStream procIn = p.getOutputStream();
		p.waitFor();
		
		//-- kill process
		listCmd = new LinkedList&lt;String&gt;();
		listCmd.add("taskkill");
    	listCmd.add("/F");
    	listCmd.add("/IM");
    	listCmd.add("wiperdog_service.exe");
    	
    	builder = new ProcessBuilder(listCmd);
		builder.redirectErrorStream(true);
		p = builder.start();	
		procOut  = p.getInputStream();
        procIn = p.getOutputStream();
		p.waitFor();

		//-- Wait
		listCmd = new LinkedList&lt;String&gt;();
		listCmd.add("cmd.exe");    	    	
		listCmd.add("/c");
		listCmd.add("sleep");
		listCmd.add("3");
		builder = new ProcessBuilder(listCmd);
		builder.redirectErrorStream(true);
		p = builder.start();	
		procOut  = p.getInputStream();
                procIn = p.getOutputStream()
		p.waitFor();

    }
    public String startServiceWindows() throws Exception{
    	
    	File workDir = new File(System.getProperty("user.dir"));
    	List&lt;String&gt; listCmd = new LinkedList&lt;String&gt;();
    	listCmd.add("net");
    	listCmd.add("start");
    	listCmd.add("wiperdog");
    	ProcessBuilder builder = new ProcessBuilder(listCmd);
	builder.redirectErrorStream(true);
	Process p = builder.start();	
        BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));
        StringBuilder strbuilder = new StringBuilder();
        String line = null;
        while ( (line = br.readLine()) != null) {
            if((line.trim() != "" )){
             strbuilder.append(line + "&amp;#13;&amp;#10;" );
             strbuilder.append(System.getProperty("line.separator"));
            }
        }
         return  strbuilder.toString();

    }

    public String reInstallServiceWindows(wdHome){
        // install new service
        def javaServDir = wdHome + "\\service\\javaservice"
        if(!(new File(javaServDir)).exists()){
          return "Directory '" + wdHome +"' existed but not be a wiperdog home directory !"
        }
        def installerService =  javaServDir + '\\create_wiperdog_service.bat'
        ProcessBuilder builder = new ProcessBuilder(installerService,wdHome);
        builder.redirectErrorStream(true);
        Process p = builder.start();
        BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));
        StringBuilder strbuilder = new StringBuilder();
        String line = null;
        while ( (line = br.readLine()) != null) {
            if((line.trim() != "" )){
             strbuilder.append(line + "&amp;#13;&amp;#10;" );
             strbuilder.append(System.getProperty("line.separator"));
            }
        }
         return  strbuilder.toString();
    }
}
{{/groovy}}</content></xwikidoc>
