<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WiperDog</web>
<name>WiperdogConfiguration</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>WiperDog.WebHome</parent>
<creator>XWiki.Admin</creator>
<author>XWiki.maixuanthanh</author>
<customClass></customClass>
<contentAuthor>XWiki.maixuanthanh</contentAuthor>
<creationDate>1381313810000</creationDate>
<date>1381458972000</date>
<contentUpdateDate>1381458970000</contentUpdateDate>
<version>1.16</version>
<title>WiperdogConfiguration</title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>563a5377-8f15-4185-b704-cd9d1efab1e9</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>require(['jquery'],function($){
  function deleteRow(r){
    var i=r.parentNode.parentNode.rowIndex;
    var row = r.parentNode.parentNode
    document.getElementById('table_display').deleteRow(i);
    return row
  }

  function editRow(r){
    var row = r.parentNode.parentNode
    var key_edit= row.cells[0].innerText
    $("#name").val(key_edit)
    $("#host").val(row.cells[1].innerText)
    $("#port").val(row.cells[2].innerText)
    $("#servlet").val(row.cells[3].innerText)
    $("#desc").val(row.cells[4].innerText)
  }

  function sendDataMongo(resultMongo){
     var data2send = JSON.stringify(resultMongo)
     $("#resultMongo").val(data2send)
  }

  function sendData(result){
     var data2send = JSON.stringify(result)
     $("#result").val(data2send)
  }
  var td_desc_width = ($("#desc").parent().width())
  $("#desc").width(td_desc_width)
  var name = null
  var hostName = null
  var port = null
  var servlet = null
  var desc = null
  var result = $.parseJSON($("#result").text())
  var resultMongo = $.parseJSON($("#resultMongo").text())

  var hostMongo = null
  var portMongo = null
  var dbNameMongo = null

  if(result == null || (result instanceof Array)){
    result = {}
  }
  if(resultMongo == null || (resultMongo instanceof Array)){
    resultMongo = {}
  }
  $("#name").focus()
  $("#update").click(function(){
    hostMongo = $("#hostMongo").val()
       if(hostMongo === ""){
          $("#messageMongo").text("Host name of MongoDB can not be empty!")
          return false
       } else {
          $("#messageMongo").text("")
       }
    portMongo = $("#portMongo").val()
       if(portMongo === ""){
          $("#messageMongo").text("Port of MongoDB can not be empty!")
          return false
       } else { 
          if(!($.isNumeric(portMongo))){
              $("#messageMongo").text("Port of MongoDB must be numeric!")
              return false
          }else{
              $("#messageMongo").text("")
          }
       }
    dbNameMongo = $("#dbNameMongo").val()
       if(dbNameMongo === ""){
          $("#messageMongo").text("Database Name of MongoDB can not be empty!")
          return false
       } else {
              $("#messageMongo").text("")
       }
    var confirm_update = confirm("Update Information of MongoDB. Are you sure?")
    if(confirm_update){
      $("#hostMongo").val(hostMongo)
      $("#portMongo").val(portMongo)
      $("#dbNameMongo").val(dbNameMongo)
      $("#messageMongo").text('Update succefully!')
      $("#hostMongo").prop('disabled',true)
      $("#portMongo").prop('disabled',true)
      $("#dbNameMongo").prop('disabled',true)
    } else {
      return false
    }
    resultMongo = {}
    resultMongo['host'] = $("#hostMongo").val()
    resultMongo['port'] = $("#portMongo").val()
    resultMongo['dbName'] = $("#dbNameMongo").val()
    sendDataMongo(resultMongo)
  })

  $("#add").click(function(){
     name = $("#name").val()
     if(name === ""){
        $("#message").text("Name can not be empty !")
          return
     } else {
            $("#message").text("")
     }

     hostName = $("#host").val()
     if(hostName === ""){
        $("#message").text("Host name can not be empty !")
          return
     } else {
        $("#message").text("")
     }
     port = $("#port").val()
     var intRegex = /^\d+$/;
     if(port === ""){
        $("#message").text("Port can not be empty !")
        return
     } else {
        if(!intRegex.test(port)){
            $("#message").text("Port must be numeric !")
             return
        }else{
            $("#message").text("")
        }
     }
     servlet= $("#servlet").val()
     if(servlet === ""){
        $("#message").text("Servlet can not be empty !")
         return
     } else {
        if(servlet.indexOf("/") === 0 || servlet.charAt(servlet.length - 1) == '/') {
           $("#message").text("Servlet can not start or end with '/' character  !")
            return
        } else {
          $("#message").text("")
        }
     }
    desc = $("#desc").val()
     if(desc === null){
       desc = ""

     }
     var key = name
     var value_servlet = "http://" + hostName + ":" + port + "/" + servlet
     var update = false
     for(key_res in result ){
       if(key === key_res){
       update = true
       break
     }
   }
  if(update){
     var confirm_update = confirm("Name exists ,want to update ?")
     if(confirm_update){
       var rows = document.getElementById('table_display').rows
       for(var i = 0 ; i &lt; rows.length ; i++) {
         var key2remove = rows[i].cells[0].innerText
         if(key == key2remove ){
          rows[i].cells[1].innerText = $("#host").val()
          rows[i].cells[2].innerText = $("#port").val()
          rows[i].cells[3].innerText = $("#servlet").val()
                                        rows[i].cells[4].innerText = $("#desc").val()
          $("#message").text('Update succefully !')
          $("#name").prop('disabled',false)
          $("#name").val("")
          $("#host").val("")
          $("#port").val("")
          $("#servlet").val("")
          $("#desc").val("")
         }
       }
    }
  } else {
    var tr2 = document.createElement('tr')
    var td_name2 = document.createElement('td')
    var inp_name2 = document.createTextNode(name)
    td_name2.appendChild(inp_name2)
    var td_host2 = document.createElement('td')
    var inp_host2 = document.createTextNode(hostName)
    td_host2.appendChild(inp_host2)
    var td_port2 = document.createElement('td')
    var inp_port2 = document.createTextNode(port)
    td_port2.appendChild(inp_port2)
    var td_servlet2 = document.createElement('td')
    var inp_servlet2 = document.createTextNode(servlet)
    var td_desc = document.createElement('td')
    var inp_desc = document.createTextNode(desc)
               
    var btn_delete = document.createElement('input')
     btn_delete.setAttribute('type','button')
     btn_delete.setAttribute('style','width:50px')
     btn_delete.setAttribute('value','Delete')
     btn_delete.setAttribute('class','delete button')
    var btn_edit = document.createElement('input')
     btn_edit.setAttribute('type','button')
     btn_edit.setAttribute('class','edit button')
     btn_edit.setAttribute('value','Edit')
     btn_edit.setAttribute('style','width:50px')
    var td_action = document.createElement('td')
      td_action.appendChild(btn_delete)
      td_action.appendChild(btn_edit)
      td_servlet2.appendChild(inp_servlet2)
                  td_desc.appendChild(inp_desc)
    tr2.appendChild(td_name2)
    tr2.appendChild(td_host2)
    tr2.appendChild(td_port2)
    tr2.appendChild(td_servlet2)
                tr2.appendChild(td_desc)
    tr2.appendChild(td_action)
               $(tr2).insertBefore($("#input"))
    $("#name").val("")
    $("#host").val("")
    $("#port").val("")
    $("#servlet").val("")
    $("#desc").val("")

     }
     result[key] = {}
     result[key]['servlet'] = value_servlet
     result[key]['desc'] = desc
     sendData(result)

  });
            $(document).on('click','.delete',function(){
    var conf_del = confirm("Are you sure ?")
    if(conf_del){
      var row = deleteRow(this)
      var key_remove = row.cells[0].innerText
			delete result[key_remove]
      sendData(result)
      if($("#name").text() === key_remove) {
         $("#name").prop('disabled',false)
      }

    }
         })
  $(document).on('click','.edit',function(){
      editRow(this)
      $("#name").prop('disabled',true)
  })

  $(document).on('click','.editMongo',function(){
      $("#hostMongo").prop('disabled',false)
      $("#portMongo").prop('disabled',false)
      $("#dbNameMongo").prop('disabled',false)
  })

jQuery.noConflict()
});</code>
</property>
<property>
<name>process</name>
</property>
<property>
<parse></parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>3047e03e-809e-498f-953a-a1bad217aa91</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>#form{
float:left
}
.message{
 margin-left:200px;
 font-weight:bold;
 color:green;
display: block
}

.header{
display:block ;
font-weight: bold ;
font-size: 1.5em
}
label{
 font-size: 1.2em;
 font-weight: bold
}
#dir{
 width: 500px
}</code>
</property>
<property>
<name>css</name>
</property>
<property>
<parse></parse>
</property>
<property>
<use>currentPage</use>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>0</number>
<className>XWiki.XWikiRights</className>
<guid>b56f91a2-46f7-47ff-804a-3d1bd9ed1b62</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels>view,edit,delete,comment</levels>
</property>
<property>
<users>xwiki:XWiki.Admin</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>1</number>
<className>XWiki.XWikiRights</className>
<guid>c292f124-7685-4307-8511-42587ef0a335</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups></groups>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users>XWiki.XWikiGuest</users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>2</number>
<className>XWiki.XWikiRights</className>
<guid>aaedc8b8-16b9-40c1-9c2c-b895021c3b24</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAdminGroup,</groups>
</property>
<property>
<levels>view,edit,delete,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiRights</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<allow>
<defaultValue>1</defaultValue>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>allow</displayType>
<name>allow</name>
<number>4</number>
<prettyName>Allow/Deny</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</allow>
<groups>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>groups</name>
<number>1</number>
<picker>1</picker>
<prettyName>Groups</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.GroupsClass</classType>
</groups>
<levels>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>levels</name>
<number>2</number>
<prettyName>Levels</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>3</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.LevelsClass</classType>
</levels>
<users>
<cache>0</cache>
<disabled>0</disabled>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>users</name>
<number>3</number>
<picker>1</picker>
<prettyName>Users</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.UsersClass</classType>
</users>
</class>
<name>WiperDog.WiperdogConfiguration</name>
<number>3</number>
<className>XWiki.XWikiRights</className>
<guid>11720ed0-6f1d-48e9-ab56-882bcfeaa0b6</guid>
<property>
<allow>1</allow>
</property>
<property>
<groups>xwiki:XWiki.XWikiAllGroup,</groups>
</property>
<property>
<levels>view,comment</levels>
</property>
<property>
<users></users>
</property>
</object>
<content>{{include document='WiperDog.GetConstantConfig'/}}

{{groovy}}
import groovy.json.*
def shell = new GroovyShell()
Properties props = System.getProperties();
def xwiki_dir = props.getProperty('user.dir');

def servletData= request.getParameter('result')
def dataMongo = request.getParameter('resultMongo')
def wdDirData = request.getParameter('wdDir')

File f = new File(xwiki_dir +"/webapps/xwiki/resources/conf.params")
def defaultParams= GetConstantConfig.DEFAULT_CONFIG
if(!f.exists()){
	println "{{warning}}File conf.params not found ,new file created !.Create data to update to conf.params file {{/warning}}"
	f.createNewFile()
}
def slurper = new JsonSlurper()
def messServlet = null
def messageMongo = null
def messWDPath = null
if(servletData!= null){
	try{
		servletDataObj = slurper.parseText(servletData)
		def oldData = shell.evaluate(f)
		if(oldData == null){
			oldData = [:]
		}
		if(oldData['servlet_config'] == null){
			oldData['servlet_config'] = [:]
		}
		oldData['servlet_config'] = servletDataObj
		def oldDataBuilder = new JsonBuilder(oldData)
		f.setText(oldDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
		messServlet = "Create servlet infomartion succesfully !"
	}catch(Exception ex){
		messServlet = "{{error}}Failed to create servlet informartion!" + ex +"{{/error}}"
	}
}

if(dataMongo != null){
	try{
		dataMongoObj = slurper.parseText(dataMongo)
		def oldData = shell.evaluate(f)
		if(oldData == null){
			oldData = [:]
		}
		if(oldData['mongoDB'] == null){
			oldData['mongoDB'] = [:]
		}
		oldData['mongoDB'] = dataMongoObj
                oldData['mongoDB']['port'] = Long.valueOf(oldData['mongoDB']['port'])
		def oldDataBuilder = new JsonBuilder(oldData)
		f.setText(oldDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
		messageMongo = "Create mongoDB infomartion succesfully! MongoDB connection information to be applied when wiperdog be restarted!"
	}catch(Exception ex){
		messageMongo = "{{error}}Failed to create mongoDB informartion!" + ex +"{{/error}}"
	}
}

if(wdDirData != null){
	File wpPath = new File(wdDirData)
	if(!wpPath.isDirectory() ){
		messWDPath = "{{error}}Incorrect directory: ' " + wdDirData +  " ' , please try again !  {{/error}}"
	} else {
		try{
			def oldData = shell.evaluate(f)
			if(oldData == null){
				oldData = [:]
			}
			if(oldData['wiperdog_path'] == null){
				oldData['wiperdog_path'] = [:]
			}
			oldData['wiperdog_path'] = wdDirData
			def oldDataBuilder = new JsonBuilder(oldData)
			f.setText(oldDataBuilder.toPrettyString().replaceAll("\\{","\\[").replaceAll("\\}","\\]"))
			messWDPath = "Update wiperdog path succesfully !"
		}catch(Exception ex){
			messWDPath = "{{error}}Failed to Update wiperdog path!" + ex + "{{/error}}"
		}
	}
}
def params = shell.evaluate(f)
if(params == null || params == []) {
	params = defaultParams
}

def paramsServlet = params['servlet_config']
def mongoDBInfo = params['mongoDB']
def paramsWDPath = params['wiperdog_path']

if(paramsServlet == null || paramsServlet == [:] ){
	paramsServlet = defaultParams['servlet_config']
} else {
	def paramsKeys = paramsServlet.keySet()
	defaultParams['servlet_config'].each{ key,value -&gt;
		if(!paramsKeys.contains(key)){
			paramsServlet[key] = {}
			paramsServlet[key]['servlet'] = value.servlet
			paramsServlet[key]['desc'] = value.desc
		}
	}
}

if(mongoDBInfo == null || mongoDBInfo == [:] ){
	mongoDBInfo = defaultParams['mongoDB']
}

if(paramsWDPath == null || paramsWDPath == "" ){
	paramsWDPath = defaultParams['wiperdog_path']
}

params['mongoDB'] = mongoDBInfo 
params['servlet_config'] = paramsServlet
def builder = new JsonBuilder(params['servlet_config'])
def str_json = builder.toPrettyString()

def builderMongo = new JsonBuilder(params['mongoDB'])
def strJsonMongo = builderMongo.toPrettyString()

def tmp = [:]
println "{{html clean='false' wiki = 'true'}}"
println "&lt;form action='#' method='POST'&gt;"
println "&lt;div class= 'header'&gt;Servlet Configuration&lt;/div&gt;"
println "&lt;table id='table_display'&gt;"
println "&lt;tr style='text-align:center'&gt;&lt;th&gt;Name&lt;/th&gt;&lt;th&gt;Host name&lt;/th&gt;&lt;th&gt;Port&lt;/th&gt;&lt;th&gt;Servlet path&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Action&lt;/th&gt;&lt;/tr&gt;"
	paramsServlet.each{key,value -&gt;
	def arr_str = ""
	def hostname = ""
	def port = ""
	def servletPath = ""
	def description = ""
	if(value.servlet != null &amp;&amp;  value.servlet != []){
		arr_str = value.servlet.split(":")
		hostname = arr_str[1].replace("//","")
		port = arr_str[2].substring(0,arr_str[2].indexOf("/"))
		servletPath = arr_str[2].substring(arr_str[2].indexOf("/")+1)
	}
	if(value.desc != null &amp;&amp; value.desc != []){
		description = value.desc
	} else {
		description = "No description"
	}
	println "&lt;tr&gt;&lt;td&gt;$key&lt;/td&gt;&lt;td&gt;$hostname&lt;/td&gt;&lt;td&gt;$port&lt;/td&gt;&lt;td&gt;$servletPath&lt;/td&gt;&lt;td&gt;$description&lt;/td&gt;&lt;td style='width:120px,text-align:center'&gt;&lt;input type='button' style='width:50px' value='Delete' class='delete button'/&gt;&lt;input type='button' value='Edit' style='width:50px' class='edit button'/&gt;&lt;/td&gt;&lt;/tr&gt;" 
	}
println "&lt;tr id='input'&gt;&lt;td&gt;&lt;input type='text' id = 'name' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'host' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'port' /&gt;&lt;/td&gt;&lt;td&gt;&lt;input type='text' id = 'servlet' /&gt;&lt;/td&gt;&lt;td&gt;&lt;textarea type='text' width='auto' id='desc'/&gt;&lt;/textarea&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;/table&gt;"
println "{{html wiki = 'false' clean = 'true'}}"
println "&lt;textarea id='result' name = 'result' style='display: none' readonly&gt;$str_json&lt;/textarea&gt;"
println "&lt;input type='button' id='add' style='width:50px' class='button' value='Add'/&gt;"
println "&lt;input type='submit' id='create' style='width:50px' class='button' value='Create'/&gt;"
println "{{/html}}"
println "&lt;/form&gt;"
println "&lt;br/&gt;"
println "&lt;div class='message' id='message'&gt;"
	if(messServlet!=null){
		println messServlet
	}
println "&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"

println "&lt;form action='#' method='POST'&gt;"
println "&lt;div class='header'&gt;MongoDB Configuration&lt;/div&gt;"
println "&lt;table id='mongoDBInfo'&gt;"
println "&lt;tr&gt;&lt;td&gt;Host Name:&lt;/td&gt;"
     def hostname = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          hostname = mongoDBInfo.host
     }
println "&lt;td&gt;&lt;input type='text' id ='hostMongo' value='$hostname' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;Port:&lt;/td&gt;"
     def port = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          port = mongoDBInfo.port

     }
println "&lt;td&gt;&lt;input type='text' id ='portMongo' value='$port' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"
println "&lt;tr&gt;&lt;td&gt;Database Name:&lt;/td&gt;"
     def dbName = ""
     if(mongoDBInfo != null &amp;&amp; mongoDBInfo != [:]){
          dbName = mongoDBInfo.dbName
     }
println "&lt;td&gt;&lt;input type='text' id ='dbNameMongo' value='$dbName' disabled/&gt;&lt;/td&gt;&lt;/tr&gt;"

println "&lt;/table&gt;"
println "{{html wiki = 'false' clean = 'true'}}"
println "&lt;textarea id='resultMongo' name='resultMongo' style='display:none' readonly&gt;$strJsonMongo&lt;/textarea&gt;"
println "&lt;input type='button' value='Edit' style='width:50px' class='editMongo button'/&gt;" 
println "&lt;input type='submit' id='update' style='width:120px' class='updateMongo button' value='Update MongoDB'/&gt;"
println "{{/html}}"
println "&lt;/form&gt;"
println "&lt;div class='message' id='messageMongo'&gt;"
	if(messageMongo != null){
		println messageMongo
	}
println "&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"

println "&lt;form id = 'wiperdogPath' action = '' method = 'POST'&gt;"
println "&lt;div class= 'header'&gt;WiperDog Path Configuration&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;label for = 'dir'&gt;Current Wiperdog path :&lt;/label&gt;"
	if(paramsWDPath != null &amp;&amp; paramsWDPath  != ""){
		println "&lt;input type ='text' id = 'dir' name = 'wdDir' value='" + paramsWDPath + "' /&gt;"
	} else {
		println "&lt;input type ='text' id = 'dir' name = 'wdDir' /&gt;"
	}
println "&lt;input type = 'submit' id = 'updateWDPath' class='button' value = 'UPDATE'/&gt;"
println "&lt;/form&gt;"
println "&lt;br/&gt;"
	if(messWDPath!=null){
		println "&lt;div class='message'&gt;"
		println messWDPath
		println "&lt;/div&gt;"
	}
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;div&gt;&amp;nbsp;&lt;/div&gt;"
println "&lt;br/&gt;"
println "{{/html}}"
{{/groovy}}</content></xwikidoc>
